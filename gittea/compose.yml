# =============================================================================
# SERVICES SECTION - Define all containers that will run
# =============================================================================
services:
  
  # -----------------------------------------------------------------------------
  # GITEA SERVER - Main application container
  # -----------------------------------------------------------------------------
  server:
    # Docker image to use - version configurable via environment
    image: ${GITEA_IMAGE:-docker.io/gitea/gitea:1.24.3}
    
    # Custom name for this container - configurable for testing
    container_name: ${GITEA_CONTAINER_NAME:-modaic-gitea-server}
    
    # Environment variables - configuration passed to the container
    environment:
      # Set user/group IDs to match host system (prevents permission issues)
      - USER_UID=${GITEA_USER_UID:-1000}
      - USER_GID=${GITEA_USER_GID:-1000}
      
      # DATABASE CONFIGURATION
      # Tell Gitea to use PostgreSQL instead of SQLite
      - GITEA__database__DB_TYPE=postgres
      # Database host - uses "db" service name, with fallback port 5432
      - GITEA__database__HOST=${POSTGRES_HOST:-db}:${POSTGRES_PORT:-5432}
      # Database name - must be set in your .env file
      - GITEA__database__NAME=${POSTGRES_DB:?POSTGRES_DB not set}
      # Database username - must be set in your .env file
      - GITEA__database__USER=${POSTGRES_USER:?POSTGRES_USER not set}
      # Database password - must be set in your .env file
      - GITEA__database__PASSWD=${POSTGRES_PASSWORD:?POSTGRES_PASSWORD not set}
      
      # SERVER CONFIGURATION
      # SSH port inside container - configurable for testing
      - GITEA__server__SSH_PORT=${GITEA_SSH_PORT:-2221}
      # Base URL for web interface - now configurable via environment
      - GITEA__server__ROOT_URL=${GITEA_ROOT_URL:-http://localhost:3000}
    
    # Network connectivity - connects to backend network to talk to database
    networks:
      - backend
    
    # Volume mounts - persistent data storage
    volumes:
      # Main Gitea data (repositories, config, etc.) - persistent volume
      - gitea-data:/data
      # Share host timezone with container (read-only)
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    
    # Port mapping - host_port:container_port - now configurable
    ports:
      # Web interface - configurable port for testing multiple instances
      - "${GITEA_WEB_PORT:-3000}:3000"
      # SSH access - configurable port for testing multiple instances
      - "${GITEA_SSH_HOST_PORT:-2221}:22"
    
    # Dependency management - ensure database starts before Gitea
    depends_on:
      - db
    
    # Restart policy - restart container unless manually stopped
    restart: unless-stopped

  # -----------------------------------------------------------------------------
  # DATABASE SERVER - PostgreSQL container for storing Gitea data
  # -----------------------------------------------------------------------------
  db:
    # Official PostgreSQL image - version configurable via environment
    image: ${POSTGRES_IMAGE:-docker.io/library/postgres:17.5}
    
    # Custom container name - configurable for testing
    container_name: ${POSTGRES_CONTAINER_NAME:-gitea-db}
    
    # PostgreSQL configuration via environment variables
    environment:
      # Database username - loaded from .env file
      - POSTGRES_USER=${POSTGRES_USER:?POSTGRES_USER not set}
      # Database password - loaded from .env file  
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?POSTGRES_PASSWORD not set}
      # Database name - loaded from .env file
      - POSTGRES_DB=${POSTGRES_DB:?POSTGRES_DB not set}
    
    # Connect to backend network to communicate with Gitea
    networks:
      - backend
    
    # Persistent storage for database files
    volumes:
      # PostgreSQL data directory - keeps your database persistent
      - gitea-db:/var/lib/postgresql/data
    
    # Always restart unless manually stopped
    restart: unless-stopped

# =============================================================================
# VOLUMES SECTION - Define persistent storage
# =============================================================================
volumes:
  # Storage for Gitea application data (repos, config, etc.)
  gitea-data:
    driver: local  # Stored on local filesystem
  
  # Storage for PostgreSQL database files
  gitea-db:
    driver: local  # Stored on local filesystem

# =============================================================================
# NETWORKS SECTION - Define how containers communicate
# =============================================================================
networks:
  # Backend network for database communication
  backend:
    external: true  # Network exists outside this compose file (must be created separately)